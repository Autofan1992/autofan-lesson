{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","redux/selectors/dialogs-selectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","styles","dialogItem","to","id","activeClassName","activeDialog","name","Message","messageBlock","message","maxLength500","maxLength","minLength2","minLength","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","Dialogs","dsRow","sidebar","dialogs","map","d","content","messages","m","values","addNewMessage","mapStateToProps","state","isAuth","getIsAuth","getDialogs","dialogsPage","getMessages","compose","connect","Component"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,4BAA4B,aAAe,gC,sFCUrMC,MARf,SAAoBC,GAChB,OACI,qBAAKC,UAAWC,IAAOC,WAAvB,SACI,cAAC,IAAD,CAASC,GAAE,mBAAcJ,EAAMK,IAAMC,gBAAiBJ,IAAOK,aAA7D,SAA4EP,EAAMQ,UCI/EC,MARf,SAAkBT,GACd,OACI,oBAAIC,UAAS,UAAKC,IAAOQ,aAAZ,oBAAb,SACKV,EAAMW,W,iCCEfC,EAAeC,YAAU,KACzBC,EAAaC,YAAU,GA+C3B,IAAMC,EAAmBC,YAAU,CAACC,KAAM,eAAjBD,EAhBzB,SAAwBjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,qBAAKnB,UAAU,cAAf,SACI,cAACoB,EAAA,EAAD,CACIC,YAAY,6HACZd,KAAM,UACNe,UAAWC,IACXC,SAAU,CAACC,IAAeZ,EAAYF,OAG9C,wBAAQX,UAAU,uBAAlB,iIAOG0B,EA/Cf,SAAiB3B,GAMb,OACI,sBAAKC,UAAWC,IAAO0B,MAAvB,UACI,sBAAK3B,UAAWC,IAAO2B,QAAvB,UACI,yCACA,qBAAK5B,UAAWC,IAAO4B,QAAvB,SACK9B,EAAM8B,QACFC,KAAI,SAACC,GAAD,OACD,cAAC,EAAD,CAAuBxB,KAAMwB,EAAExB,KAAMH,GAAI2B,EAAE3B,IAA1B2B,EAAE3B,YAInC,sBAAKJ,UAAS,UAAKC,IAAO+B,QAAZ,QAAd,UACI,oBAAIhC,UAAU,kBAAd,SACKD,EAAMkC,SACFH,KAAI,SAACI,GAAD,OAAO,cAAC,EAAD,CAAoBxB,QAASwB,EAAExB,QAASN,GAAI8B,EAAE9B,IAAhC8B,EAAE9B,SAGpC,cAACW,EAAD,CAAkBG,SArBX,SAAAiB,GACfpC,EAAMqC,cAAcD,EAAOzB,mB,+BCT7B2B,EAAkB,SAACC,GAAD,MAAY,CAChCC,OAAQC,YAAUF,K,WCLTG,EAAa,SAAAH,GACtB,OAAOA,EAAMI,YAAYb,SAEhBc,EAAc,SAAAL,GACvB,OAAOA,EAAMI,YAAYT,UCoCdW,sBACXC,aARoB,SAACP,GACrB,MAAO,CACHT,QAASY,EAAWH,GACpBL,SAAUU,EAAYL,MAKD,CAACF,qBFjCf,SAA0BU,GAKrC,OAAOD,YAAQR,EAARQ,EAJP,SAA0B9C,GACtB,OAAQA,EAAMwC,OAAoC,cAACO,EAAD,eAAe/C,IAA1C,cAAC,IAAD,CAAUI,GAAI,eE8B9ByC,CAGblB","file":"static/js/5.d3a5d17f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dsRow\":\"Dialogs_dsRow__7oL7t\",\"sidebar\":\"Dialogs_sidebar__vKCS0\",\"minTitle\":\"Dialogs_minTitle__OGvzu\",\"dialogs\":\"Dialogs_dialogs__3c2Y2\",\"dialogItem\":\"Dialogs_dialogItem__2jnEV\",\"activeDialog\":\"Dialogs_activeDialog__bFDS_\"};","import styles from '../Dialogs.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction DialogItem(props) {\r\n    return (\r\n        <div className={styles.dialogItem}>\r\n            <NavLink to={`/dialogs/${props.id}`} activeClassName={styles.activeDialog}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import styles from '../Dialogs.module.scss';\r\n\r\nfunction Message (props) {\r\n    return (\r\n        <li className={`${styles.messageBlock} list-group-item`}>\r\n            {props.message}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Message","import styles from './Dialogs.module.scss';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLength, minLength, requiredField} from \"../../redux/utilities/validators/validators\";\r\n\r\nlet maxLength500 = maxLength(500)\r\nlet minLength2 = minLength(2)\r\n\r\nfunction Dialogs(props) {\r\n\r\n    const addMessage = values => {\r\n        props.addNewMessage(values.message)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dsRow}>\r\n            <div className={styles.sidebar}>\r\n                <h2>DIALOGS</h2>\r\n                <div className={styles.dialogs}>\r\n                    {props.dialogs\r\n                        .map((d) =>\r\n                            <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={`${styles.content} p-3`}>\r\n                <ul className=\"list-group mb-3\">\r\n                    {props.messages\r\n                        .map((m) => <Message key={m.id} message={m.message} id={m.id}/>)\r\n                    }\r\n                </ul>\r\n                <MessageReduxForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AddMessageForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"input-block\">\r\n                <Field\r\n                    placeholder=\"Введите ваше сообщение\"\r\n                    name={'message'}\r\n                    component={Textarea}\r\n                    validate={[requiredField, minLength2, maxLength500]}\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-primary mt-2\">Отправить сообщение</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({form: 'messageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs","import {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuth} from \"../redux/selectors/auth-selectors\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nexport default function withAuthRedirect(Component) {\r\n    function WrappedComponent(props) {\r\n        return !props.isAuth ? <Redirect to={'login'}/> : <Component {...props}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(WrappedComponent)\r\n}","export const getDialogs = state => {\r\n    return state.dialogsPage.dialogs\r\n}\r\nexport const getMessages = state => {\r\n    return state.dialogsPage.messages\r\n}","import {addNewMessage} from \"../../redux/reducers/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogs, getMessages} from \"../../redux/selectors/dialogs-selectors\";\r\n\r\n/*const OldDialogsContainer = () => {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    const state = store.getState().dialogsPage;\r\n\r\n                    let addNewMessage = () => {\r\n                        store.dispatch(addMessage());\r\n                    };\r\n\r\n                    let onMessageChange = (text) => {\r\n                        let action = updateNewMessageText(text);\r\n                        store.dispatch(action);\r\n                    };\r\n                    return <Dialogs\r\n                        addNewMessage={addNewMessage}\r\n                        onMessageChange={onMessageChange}\r\n                        state={state}\r\n                    />\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    );\r\n}*/\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: getDialogs(state),\r\n        messages: getMessages(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addNewMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}