{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","images/profile-thumbnail-big.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Post","props","className","styles","postItem","avatar","src","alt","message","likesCount","onClick","likePost","id","maxLength10","maxLength","minLength2","minLength","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","requiredField","MyPosts","myPosts","newPost","values","addPost","post","posts","map","p","connect","state","profilePage","postID","compose","isAuth","getIsAuth","authorisedUserID","getAuthUserID","withRouter","useState","editMode","setEditMode","currentStatus","setStatus","useEffect","status","toggleEditMode","profileStatus","statusChangeResult","role","statusBlock","Number","match","params","userId","xmlns","width","height","fill","viewBox","d","forInput","type","onBlur","updateUserStatus","onChange","e","target","autoFocus","ProfileInfo","profile","userID","profileInfo","thumbImg","profileThumbnailBig","authorInfo","topInfo","photos","large","thumbnail","infoBlock","fullName","lookingForAJob","lookingForAJobDescription","about","aboutMe","contacts","entries","title","url","rel","href","Preloader","Profile","MyPostsContainer","getUserProfile","getUserStatus"],"mappings":"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","file":"static/js/3.67f0576c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbImg\":\"ProfileInfo_thumbImg__3P75w\",\"authorInfo\":\"ProfileInfo_authorInfo__z0vNc\",\"topInfo\":\"ProfileInfo_topInfo__siulX\",\"about\":\"ProfileInfo_about__28Lpf\",\"contacts\":\"ProfileInfo_contacts__1Lq59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2xP7S\",\"newPost\":\"MyPosts_newPost__3V9sr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__3tzQD\",\"avatar\":\"Post_avatar__Rug1X\"};","import styles from './Post.module.scss';\r\nimport avatar from '../../../../images/user.svg';\r\n\r\nfunction Post (props) {\r\n    return (\r\n        <li className={`${styles.postItem} list-group-item`}>\r\n            <div className=\"d-flex\">\r\n                <div className={styles.avatar}>\r\n                    <img src={avatar} className=\"w-100\" alt=\"\"/>\r\n                </div>\r\n                <div>{props.message}</div>\r\n            </div>\r\n            <hr/>\r\n            <div className=\"d-flex\">\r\n                {!props.likesCount ? '–ù–∞–∂–º–∏—Ç–µ –ø–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö' : <span className=\"me-2\">–ù—Ä–∞–≤–∏—Ç—å—Å—è: {props.likesCount}</span>}\r\n                <span className=\"ms-auto\" onClick={() => props.likePost(props.id)}>üëç</span>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Post","import styles from './MyPosts.module.scss';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, minLength, requiredField} from \"../../../redux/utilities/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLength(10)\r\nconst minLength2 = minLength(2)\r\n\r\nfunction MyPosts(props) {\r\n\r\n    const addNewPost = values => {\r\n        props.addPost(values.post)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.myPosts}>\r\n            <h2>My posts</h2>\r\n            <div className={styles.newPost}>\r\n                <PostReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <ul className={`${styles.posts} list-group`}>\r\n                {props.posts\r\n                    .map((p) => <Post\r\n                        key={p.id} id={p.id}\r\n                        message={p.message}\r\n                        likesCount={p.likesCount}\r\n                        likePost={props.likePost}\r\n                    />)\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PostForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"input-block\">\r\n                <Field\r\n                    placeholder=\"–ù–∞—á–∏–Ω–∞–π—Ç–µ –ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç\"\r\n                    name={'post'}\r\n                    component={Textarea}\r\n                    validate={[requiredField, maxLength10, minLength2]}\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-primary mt-3\">Add Post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'postForm'})(PostForm)\r\n\r\nexport default MyPosts","import {addPost, likePost} from \"../../../redux/reducers/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n/*const oldMyPostsContainer = () => {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store) => {\r\n                    const state = store.getState().profilePage;\r\n\r\n                    let addPost = () => {\r\n                        store.dispatch(addPost());\r\n                    }\r\n                    let onPostChange = (text) => {\r\n                        let action = updateNewPostText(text);\r\n                        store.dispatch(action);\r\n                    }\r\n\r\n                    return <MyPosts\r\n                        updateNewPostText={onPostChange}\r\n                        addPost={addPost}\r\n                        state={state}\r\n                    />\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    );\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        postID: state.profilePage.posts.length\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{addPost, likePost}) (MyPosts);","export default __webpack_public_path__ + \"static/media/profile-thumbnail-big.7baae224.jpg\";","import {useState, useEffect} from 'react'\r\nimport styles from './ProfileInfo.module.scss'\r\nimport {connect} from \"react-redux\"\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getAuthUserID, getIsAuth} from \"../../../redux/selectors/auth-selectors\";\r\n\r\nfunction ProfileStatusWithHooks(props) {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [currentStatus, setStatus] = useState('')\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    const handleStatusUpdate = () => {\r\n        if (currentStatus !== props.status) {\r\n            props.updateUserStatus(currentStatus)\r\n        }\r\n        toggleEditMode()\r\n    }\r\n\r\n    const handleStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.profileStatus}>\r\n            {props.statusChangeResult !== null\r\n            && <div>\r\n                {!props.statusChangeResult\r\n                    ? <div className=\"alert alert-danger\" role=\"alert\">\r\n                        –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!\r\n                    </div>\r\n                    : <div className=\"alert alert-success\" role=\"alert\">\r\n                        –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!\r\n                    </div>\r\n                }\r\n            </div>}\r\n\r\n            <div className=\"d-flex\"><p className=\"fw-bold\">–°—Ç–∞—Ç—É—Å:&nbsp;</p>\r\n                <div className={styles.statusBlock}>\r\n                    <div>\r\n                        <span>{props.status}&nbsp;</span>\r\n                        {((props.isAuth && (Number(props.match.params.userId) === props.authorisedUserID)) || (props.match.params.userId === undefined)) &&\r\n                        <button\r\n                            className=\"btn btn-secondary d-inline-flex align-items-center ms-2\"\r\n                            onClick={toggleEditMode}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                 className=\"bi bi-pencil-fill\" viewBox=\"0 0 16 16\">\r\n                                <path\r\n                                    d=\"M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z\"/>\r\n                            </svg>\r\n                        </button>\r\n                        }\r\n                    </div>\r\n                    {editMode\r\n                    && <div className={styles.forInput}>\r\n                        <input type=\"text\" value={currentStatus} onBlur={handleStatusUpdate}\r\n                               onChange={handleStatusChange} autoFocus={true}/>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: getIsAuth(state),\r\n    authorisedUserID: getAuthUserID(state),\r\n})\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    withRouter\r\n)(ProfileStatusWithHooks)","import styles from './ProfileInfo.module.scss';\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport profileThumbnailBig from \"../../../images/profile-thumbnail-big.jpg\";\r\nimport thumbnail from \"./../../../images/profile-thumbnail-big.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, userID, status, updateUserStatus, statusChangeResult }) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.profileInfo}>\r\n            <div className={styles.thumbImg}>\r\n                <img src={profileThumbnailBig} alt=\"thumbnail\"/>\r\n            </div>\r\n            <div className={styles.authorInfo}>\r\n                <div className={styles.topInfo}>\r\n                    <div className={styles.avatar}>\r\n                        <img src={profile.photos.large || thumbnail} alt=\"\"/>\r\n                    </div>\r\n                    <div className={styles.infoBlock}>\r\n                        <ProfileStatusWithHooks\r\n                            userID={userID} status={status}\r\n                            statusChangeResult={statusChangeResult}\r\n                            updateUserStatus={updateUserStatus}\r\n                        />\r\n                        <p><span className=\"fw-bold\">–ü–æ–ª–Ω–æ–µ –ò–º—è:</span> {profile.fullName}</p>\r\n                        <p><span\r\n                            className=\"fw-bold\">–í –ø–æ–∏—Å–∫–∞—Ö —Ä–∞–±–æ—Ç—ã:</span> {profile.lookingForAJob ? '–î–∞' : '–ù–µ—Ç'}\r\n                        </p>\r\n                        {profile.lookingForAJob\r\n                        && <p>{profile.lookingForAJobDescription}</p>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={styles.about}>\r\n                    <p><b>–û–±–æ –º–Ω–µ</b></p>\r\n                    <p>{profile.aboutMe}</p>\r\n                </div>\r\n                <div className={styles.contacts}>\r\n                    <p><b>–Ø –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö:</b></p>\r\n                    {Object.entries(profile.contacts).map(([title, url]) => (\r\n                        url ? <a target=\"_blank\" rel=\"noreferrer\" key={url} href={`https://${url}`}>{title}</a> : null\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nfunction Profile (props) {\r\n    return (\r\n        <>\r\n            <ProfileInfo {...props} />\r\n            <MyPostsContainer/>\r\n        </>\r\n    )\r\n}\r\nexport default Profile","import { useEffect } from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from \"../../redux/reducers/profile-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport { getAuthUserID, getIsAuth } from \"../../redux/selectors/auth-selectors\";\r\n\r\nfunction ProfileContainer({ getUserProfile, getUserStatus, authorisedUserID, ...props }) {\r\n\r\n    useEffect(() => {\r\n        let userID = props.match.params.userId ?? authorisedUserID\r\n\r\n        if (userID) {\r\n            getUserProfile(userID)\r\n            getUserStatus(userID)\r\n        }\r\n    }, [getUserProfile, getUserStatus, props.match, authorisedUserID])\r\n\r\n    return (\r\n        <div className=\"profileBlock\">\r\n            <Profile {...props} userID={props.match.params.userId}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    authorisedUserID: getAuthUserID(state),\r\n    isAuth: getIsAuth(state),\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    statusChangeResult: state.profilePage.statusChangeResult\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{ getUserProfile, getUserStatus, updateUserStatus }),\r\n    withRouter)(ProfileContainer)"],"sourceRoot":""}