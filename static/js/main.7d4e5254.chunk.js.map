{"version":3,"sources":["components/Navbar/Navbar.module.scss","redux/reducers/dialogs-reducer.js","redux/reducers/users-reducer.js","components/common/FormControls/FormControls.module.scss","components/ToDoList/ToDo.module.scss","components/Weather/Weather.module.scss","api/api.js","reportWebVitals.js","components/Settings/Settings.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Navbar/Navbar.jsx","components/ToDoList/ToDo.jsx","components/ToDoList/ToDoList.jsx","redux/reducers/todoList-reducer.js","redux/selectors/todoList-selectors.js","components/ToDoList/ToDoListContainer.jsx","images/logo.svg","components/Header/Header.jsx","redux/reducers/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Weather/Weather.jsx","redux/reducers/weather-reducer.js","components/Weather/WeatherForm.jsx","components/Weather/WeatherContainer.jsx","components/Login/Login.jsx","redux/reducers/app-reducer.js","redux/selectors/app-selectors.js","redux/reducers/sidebar-reducer.js","redux/redux-store.js","App.jsx","index.js","redux/selectors/auth-selectors.js","redux/utilities/validators/validators.js","components/Header/Header.module.scss","components/common/FormControls/FormControls.jsx","images/preloader.svg","components/common/preloader/Preloader.js","images/user.svg","redux/reducers/profile-reducer.js"],"names":["module","exports","ADD_MESSAGE","initialState","dialogs","id","name","messages","addNewMessage","message","dispatch","type","setNewMessage","reset","dialogsReducer","state","action","length","TOGGLE_FOLLOW_USER","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","users","totalUsersCount","pageSize","currentPage","isFetching","followingInProgress","setToggleFollow","userID","toggleIsFetching","toggleFollowingProgress","isFollowing","requestUsers","pageNumber","a","userAPI","getUsers","response","data","items","totalCount","followUserToggle","followed","followFunc","unfollowUserRequest","followUserRequest","resultCode","usersReducer","map","u","filter","instance","axios","baseURL","withCredentials","headers","get","delete","post","authAPI","getAuthInfo","getAuthProfile","sendLoginRequest","email","password","rememberMe","captcha","getCaptchaImage","sendLogoutRequest","profileAPI","getProfile","getStatus","setStatus","status","put","weatherInstance","weatherAPI","getWeatherData","cityName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Settings","props","Music","News","Navbar","className","styles","navMenu","to","item","activeClassName","active","ToDo","onChange","handleComplete","checked","completeToggle","htmlFor","text","onClick","handleDelete","minLength2","minLength","TodoReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","placeholder","validate","requiredField","ToDoList","values","addTodo","todos","t","complete","updateTodoStatus","deleteTodo","activeTodos","handleFilter","value","disabled","completeTodos","todosLength","toggleAllTodo","toggleAllComplete","deleteAllCompleteTodo","ADD_TODO","DELETE_TODO","DELETE_ALL_COMPLETE_TODO","TOGGLE_ALL_TODO","UPDATE_TODO_STATUS","FILTER_TODO","todoListReducer","newText","todo","getTodos","todoList","getVisibleTodos","createSelector","visibilityFilter","getActiveTodosCount","getCompleteTodosCount","some","connect","someActiveTodos","someCompleteTodos","setNewTodo","filterTodo","filterText","ToDoWrapper","e","target","Header","header","logoBlock","src","logo","alt","loginBlock","isAuth","userInfo","avatar","userPhoto","user","userLogin","handleLogout","SET_USER_DATA","SET_CAPTCHA","login","authError","error","imageUrl","undefined","setAuthUserData","payload","getAuthUserData","photos","small","authReducer","url","getAuthUserLogin","getAuthUserID","getAuthUserPhoto","getIsAuth","logout","Weather","weatherCity","country","weather","w","i","icon","Math","round","temperature","temperatureFeels","description","windSpeed","sunriseDate","sunsetDate","SET_WEATHER_DATA","TOGGLE_FETCHING","SET_CITY","weatherInfo","setCity","toggleFetching","weatherReducer","weatherData","main","temp","feels_like","wind","speed","sys","sunrise","sunset","WeatherForm","handleFormSubmit","handleInputChange","weatherPage","Date","fetchingStatus","getHours","getMinutes","getSeconds","trim","console","warn","alert","weatherWrapper","preventDefault","Preloader","LoginReduxForm","captchaURL","role","getCaptchaURL","stopSubmit","_error","SET_INITIALIZED","initialized","appReducer","getAppInit","app","friends","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","auth","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","React","lazy","ProfileContainer","UsersContainer","AppContainer","initializeApp","withRouter","init","useEffect","fallback","path","render","SocialApp","ReactDOM","document","getElementById","maxLength","FormControl","meta","touched","children","hasError","errorLabel","Textarea","input","valid","preloader","ADD_POST","DELETE_POST","LIKE_POST","SET_USER_PROFILE","SET_USER_STATUS","SET_CHANGE_STATUS_RESULT_CODE","posts","profile","statusChangeResult","addPost","setNewPost","likePost","getUserProfile","userId","setUserStatus","getUserStatus","setChangeStatusResponse","updateUserStatus","setTimeout","likesCount","p"],"mappings":"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","file":"static/js/main.7d4e5254.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navMenu\":\"Navbar_navMenu__3fc_G\",\"item\":\"Navbar_item__2P-Kd\",\"active\":\"Navbar_active__3Mk4n\"};","import {reset} from \"redux-form\";\r\n\r\nconst ADD_MESSAGE = 'DIALOGS/addMessage'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Nick'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Dimych'\r\n        },\r\n    ],\r\n    messages: [],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: state.messages.length, message: action.message}],\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst setNewMessage = (message, id) => ({\r\n    type: ADD_MESSAGE,\r\n    message,\r\n    id\r\n})\r\n\r\nexport const addNewMessage = message => dispatch => {\r\n    dispatch(setNewMessage(message))\r\n    dispatch(reset('messageForm'))\r\n}\r\n\r\nexport default dialogsReducer","import { userAPI } from \"../../api/api\";\r\n\r\nconst TOGGLE_FOLLOW_USER = 'USERS/TOGGLE_FOLLOW_USER'\r\nconst SET_USERS = 'USERS/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE'\r\nconst SET_USERS_TOTAL_COUNT = 'USERS/SET_USERS_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'USERS/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'USERS/TOGGLE_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userID\r\n                    ? { ...u, followed: !u.followed } : u)\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalCount\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter(id => id !== action.userID)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setToggleFollow = (userID) => ({ type: TOGGLE_FOLLOW_USER, userID })\r\nconst setUsers = (users) => ({ type: SET_USERS, users })\r\nconst setTotalUsersCount = (totalCount) => ({ type: SET_USERS_TOTAL_COUNT, totalCount })\r\nconst setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nconst toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nconst toggleFollowingProgress = (isFollowing, userID) => ({\r\n    type: TOGGLE_FOLLOWING_PROGRESS,\r\n    isFollowing,\r\n    userID\r\n})\r\n\r\nexport const requestUsers = (pageNumber, pageSize) => {\r\n    return async dispatch => {\r\n        dispatch(toggleIsFetching(true))\r\n\r\n        let response = await userAPI.getUsers(pageNumber, pageSize)\r\n        dispatch(setUsers(response.data.items))\r\n        dispatch(setTotalUsersCount(response.data.totalCount))\r\n        dispatch(setCurrentPage(pageNumber))\r\n        dispatch(toggleIsFetching(false))\r\n    }\r\n}\r\n\r\nexport const followUserToggle = (userID, followed) => async dispatch => {\r\n    let followFunc = !followed ? userAPI.followUserRequest : userAPI.unfollowUserRequest\r\n    dispatch(toggleFollowingProgress(true, userID))\r\n\r\n    let response = await followFunc(userID)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setToggleFollow(userID))\r\n        dispatch(toggleFollowingProgress(false, userID))\r\n    }\r\n}\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorLabel\":\"FormControls_errorLabel__nRhlD\",\"formError\":\"FormControls_formError__EC6c1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToDoWrapper\":\"ToDo_ToDoWrapper__1tlR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherWrapper\":\"Weather_weatherWrapper__1c_xF\"};","import * as axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": '1f6ea116-9c88-4045-ba83-8df91e8a32ba'\r\n\r\n        // autofan \"API-KEY\": '1f6ea116-9c88-4045-ba83-8df91e8a32ba'\r\n        // pisulek \"API-KEY\": '3e6eaf49-0b00-48a5-bc21-0cbba1e73af6'\r\n    }\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    unfollowUserRequest(userID) {\r\n        return instance.delete(`follow/${userID}`)\r\n    },\r\n    followUserRequest(userID) {\r\n        return instance.post(`follow/${userID}`)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthInfo() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    getAuthProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n    },\r\n    sendLoginRequest(email, password, rememberMe, captcha) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    getCaptchaImage() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    },\r\n    sendLogoutRequest() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID) {\r\n        return instance.get(`profile/${userID}`)\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`)\r\n    },\r\n    setStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    }\r\n}\r\n\r\nconst weatherInstance = axios.create({\r\n    baseURL: 'http://api.openweathermap.org/data/2.5/'\r\n})\r\n\r\nconst weatherProfileId = 'b979e8592b62a595eec4ec0cf4ac691f'\r\n\r\nexport const weatherAPI = {\r\n    getWeatherData(cityName) {\r\n        return weatherInstance.get(`weather?q=${cityName}&appid=${weatherProfileId}&units=metric&lang=ru`)\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","function Settings (props) {\r\n    return (\r\n      <h2>Settings</h2>\r\n    )\r\n}\r\n\r\nexport default Settings","function Music(props) {\r\n    return (\r\n        <h2>Music</h2>\r\n    )\r\n}\r\n\r\nexport default Music","function News(props) {\r\n    return (\r\n        <h2>News</h2>\r\n    )\r\n}\r\n\r\nexport default News","import styles from './Navbar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className={styles.navMenu}>\r\n            <NavLink to=\"/profile\" className={styles.item} activeClassName={styles.active}>Profile</NavLink>\r\n            <NavLink to=\"/dialogs\" className={styles.item} activeClassName={styles.active}>Messages</NavLink>\r\n            <NavLink to=\"/news\" className={styles.item} activeClassName={styles.active}>News</NavLink>\r\n            <NavLink to=\"/music\" className={styles.item} activeClassName={styles.active}>Music</NavLink>\r\n            <NavLink to=\"/settings\" className={styles.item} activeClassName={styles.active}>Settings</NavLink>\r\n            <NavLink to=\"/users\" className={styles.item} activeClassName={styles.active}>Users</NavLink>\r\n            <NavLink to=\"/todolist\" className={styles.item} activeClassName={styles.active}>Todo List</NavLink>\r\n            <NavLink to=\"/weather\" className={styles.item} activeClassName={styles.active}>Weather</NavLink>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","function ToDo(props) {\r\n    return (\r\n        <ul className=\"list-group mb-3\">\r\n            <li className=\"list-group-item d-flex align-items-center justify-content-between\">\r\n                <div className=\"toDoItem flex-grow-1 d-flex align-items-center\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\"\r\n                           name=\"toDo\" id={props.id}\r\n                           onChange={props.handleComplete}\r\n                           checked={props.completeToggle}\r\n                    />\r\n                    <label htmlFor={props.id}\r\n                           className={`${props.completeToggle} mx-3 form-check-label flex-grow-1`}>{props.text}</label>\r\n                </div>\r\n                <button className=\"btn btn-danger btn-sm\" onClick={props.handleDelete} id={props.id}>&times;</button>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ToDo","import ToDo from \"./ToDo\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {minLength, requiredField} from \"../../redux/utilities/validators/validators\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\n\r\nconst minLength2 = minLength(2)\r\n\r\nfunction ToDoList(props) {\r\n\r\n    const addNewTodo = values => {\r\n        props.addTodo(values.text)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TodoReduxForm onSubmit={addNewTodo}/>\r\n            <hr/>\r\n            {\r\n                props.todos.map(t => <ToDo\r\n                    key={t.id} id={t.id} text={t.text}\r\n                    completeToggle={t.complete}\r\n                    handleComplete={() => props.updateTodoStatus(t.id)}\r\n                    handleDelete={() => props.deleteTodo(t.id)}\r\n                />)\r\n            }\r\n            <p className=\"todosLeft\">Активных заметок{props.activeTodos > 0 ? (': ' + props.activeTodos) : ' нет'}</p>\r\n            <div className=\"filterButtons\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-secondary\" onClick={props.handleFilter} value=\"ALL_TODOS\">Показать\r\n                            все\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-secondary\" onClick={props.handleFilter} value=\"ACTIVE_TODOS\"\r\n                                disabled={!props.activeTodos}>Показать\r\n                            активные\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button className=\"btn btn-secondary\" onClick={props.handleFilter}\r\n                                value=\"COMPLETE_TODOS\" disabled={!props.completeTodos}>Показать выполненные\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {props.todosLength\r\n                    ? <button className=\"btn btn-secondary my-3\" onClick={() => props.toggleAllTodo()}>Отметить\r\n                        все {`${props.toggleAllComplete}`}</button>\r\n                    : ''}\r\n            </div>\r\n            <div>\r\n                {props.completeTodos\r\n                    ? <button className=\"btn btn-secondary\" onClick={() => props.deleteAllCompleteTodo()}>Удалить все\r\n                        выполненные</button>\r\n                    : ''}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction TodoForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                        <Field\r\n                            name={'text'}\r\n                            component={Input}\r\n                            placeholder=\"Введите заметку\"\r\n                            validate={[requiredField, minLength2]}\r\n                        />\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <button className=\"btn btn-primary px-5\">Добавить заметку</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst TodoReduxForm = reduxForm({form: 'todoForm'})(TodoForm)\r\n\r\nexport default ToDoList","import {reset} from \"redux-form\";\r\n\r\nconst ADD_TODO = 'TODOS/ADD_TODO'\r\nconst DELETE_TODO = 'TODOS/DELETE_TODO'\r\nconst DELETE_ALL_COMPLETE_TODO = 'TODOS/DELETE_ALL_COMPLETE_TODO'\r\nconst TOGGLE_ALL_TODO = 'TODOS/TOGGLE_ALL_TODO'\r\nconst UPDATE_TODO_STATUS = 'TODOS/UPDATE_TODO_STATUS'\r\nconst FILTER_TODO = 'TODOS/FILTER_TODO'\r\n\r\nlet initialState = {\r\n    todos: [],\r\n    filter: 'all',\r\n    toggleAllComplete: true\r\n}\r\n\r\nconst todoListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return {\r\n                ...state,\r\n                newText: '',\r\n                todos: [{id: state.todos.length, text: action.text, complete: false}, ...state.todos],\r\n            }\r\n\r\n        case UPDATE_TODO_STATUS:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(todo => todo.id === action.id\r\n                    ? {...todo, complete: !todo.complete} : todo)\r\n            }\r\n\r\n        case FILTER_TODO:\r\n            return {\r\n                ...state,\r\n                filter: action.status\r\n            }\r\n\r\n        case DELETE_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => todo.id !== action.id),\r\n            }\r\n\r\n        case DELETE_ALL_COMPLETE_TODO:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => !todo.complete),\r\n            }\r\n\r\n        case TOGGLE_ALL_TODO:\r\n            return {\r\n                ...state,\r\n                toggleAllComplete: !state.toggleAllComplete,\r\n                todos: state.todos.map((todo) => {\r\n                    return {\r\n                        ...todo,\r\n                        complete: state.toggleAllComplete\r\n                    }\r\n                })\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setNewTodo = text => ({\r\n    type: ADD_TODO,\r\n    text\r\n})\r\n\r\nexport const addTodo = (text) => dispatch => {\r\n    dispatch(setNewTodo(text))\r\n    dispatch(reset('todoForm'))\r\n}\r\n\r\nexport const deleteAllCompleteTodo = () => ({\r\n    type: DELETE_ALL_COMPLETE_TODO\r\n})\r\n\r\nexport const toggleAllTodo = () => ({\r\n    type: TOGGLE_ALL_TODO\r\n})\r\n\r\nexport const deleteTodo = (id) => ({\r\n    type: DELETE_TODO,\r\n    id: id\r\n})\r\n\r\nexport const updateTodoStatus = (id = 1) => ({\r\n    type: UPDATE_TODO_STATUS,\r\n    id\r\n})\r\n\r\nexport const filterTodo = (filterText) => ({\r\n    type: FILTER_TODO,\r\n    status: filterText\r\n})\r\n\r\nexport default todoListReducer","import {createSelector} from 'reselect'\r\n\r\nconst getVisibilityFilter = state => state.todoList.filter\r\nconst getTodos = state => state.todoList.todos\r\n\r\nexport const getVisibleTodos = createSelector(\r\n    getVisibilityFilter, getTodos,\r\n    (visibilityFilter, todos) => {\r\n        switch (visibilityFilter) {\r\n            case 'ALL_TODOS':\r\n                return todos\r\n            case 'COMPLETE_TODOS':\r\n                return todos.filter(t => t.complete)\r\n            case 'ACTIVE_TODOS':\r\n                return todos.filter(t => !t.complete)\r\n            default:\r\n                return todos\r\n        }\r\n    }\r\n)\r\n\r\nexport const getActiveTodosCount = createSelector(\r\n    getTodos,\r\n    (todos) => {\r\n        return todos.filter(t => !t.complete).length\r\n    }\r\n)\r\n\r\nexport const getCompleteTodosCount = createSelector(\r\n    getTodos,\r\n    (todos) => {\r\n        return todos.some(t => t.complete)\r\n    }\r\n)","import ToDoList from \"./ToDoList\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addTodo,\r\n    deleteAllCompleteTodo,\r\n    deleteTodo,\r\n    filterTodo,\r\n    toggleAllTodo,\r\n    updateTodoStatus\r\n} from \"../../redux/reducers/todoList-reducer\";\r\nimport styles from './ToDo.module.scss';\r\nimport {getCompleteTodosCount, getActiveTodosCount, getVisibleTodos} from \"../../redux/selectors/todoList-selectors\";\r\n\r\nfunction ToDoListContainer(props) {\r\n    const handleFilter = e => {\r\n        props.filterTodo(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.ToDoWrapper}>\r\n            <ToDoList\r\n                addTodo={props.addTodo}\r\n                handleFilter={handleFilter}\r\n                updateTodoStatus={props.updateTodoStatus}\r\n                toggleAllComplete={props.toggleAllComplete}\r\n                deleteTodo={props.deleteTodo}\r\n                toggleAllTodo={props.toggleAllTodo}\r\n                deleteAllCompleteTodo={props.deleteAllCompleteTodo}\r\n                todos={props.todos}\r\n                activeTodos={props.someActiveTodos}\r\n                completeTodos={props.someCompleteTodos}\r\n                todosLength={props.todosLength}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        todoList: state.todoList,\r\n        newText: state.todoList.newText,\r\n        todos: getVisibleTodos(state),\r\n        filter: state.todoList.filter,\r\n        someActiveTodos: getActiveTodosCount(state),\r\n        someCompleteTodos: getCompleteTodosCount(state),\r\n        toggleAllComplete: state.todoList.toggleAllComplete,\r\n        todosLength: state.todoList.todos.length\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {addTodo, deleteAllCompleteTodo, toggleAllTodo, deleteTodo, updateTodoStatus, filterTodo})\r\n(ToDoListContainer)","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import styles from './Header.module.scss';\r\nimport logo from '../../images/logo.svg';\r\nimport user from '../../images/user.svg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header (props) {\r\n    return (\r\n        <header className={styles.header}>\r\n            <div className={styles.logoBlock}>\r\n                <img src={logo} alt=\"\"/>\r\n            </div>\r\n            <div className={styles.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div className={styles.userInfo}>\r\n                        <NavLink to={`/profile/${props.userID}`}>\r\n                            <div className={styles.avatar}>\r\n                                <img src={props.userPhoto ? props.userPhoto : user} alt=\"avatar\"/>\r\n                            </div>\r\n                        </NavLink>\r\n                        <div className=\"text-center\">\r\n                            <p className=\"mb-0\">{props.userLogin}</p>\r\n                            <button onClick={props.handleLogout} className=\"btn btn-link p-0\">Logout</button>\r\n                        </div>\r\n                    </div>\r\n                    : <NavLink className=\"btn btn-link\" to=\"/login\">Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import {authAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'AUTH/SET_USER_DATA';\r\nconst SET_CAPTCHA = 'AUTH/SET_CAPTCHA';\r\n\r\nlet initialState = {\r\n    userID: null,\r\n    email: null,\r\n    login: null,\r\n    userPhoto: null,\r\n    isAuth: false,\r\n    authError: null,\r\n    captcha: {\r\n        error: false,\r\n        imageUrl: undefined\r\n    }\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                captcha: {\r\n                    error: true,\r\n                    imageUrl: action.url\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setAuthUserData = (isAuth, userID, email, login, userPhoto) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userID, email, login, userPhoto, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async dispatch => {\r\n    let response = await authAPI.getAuthInfo()\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data\r\n            response = await authAPI.getAuthProfile(id)\r\n            dispatch(setAuthUserData(true, id, email, login, response.data.photos.small))\r\n        }\r\n}\r\n\r\nconst setCaptcha = url => ({\r\n    type: SET_CAPTCHA,\r\n    url\r\n})\r\n\r\nexport const login = ({email, password, rememberMe, captcha}) => async dispatch => {\r\n    try {\r\n        let response = await authAPI.sendLoginRequest(email, password, rememberMe, captcha)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else if (response.data.resultCode > 0 && response.data.resultCode < 10) {\r\n            dispatch(stopSubmit('loginForm', {_error: 'Проверьте логин и/или пароль'}))\r\n        }\r\n\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(stopSubmit('loginForm', {_error: 'Проверьте логин и/или пароль, а также введите символы изображенные на картинке в поле ниже'}))\r\n            response = await authAPI.getCaptchaImage()\r\n            dispatch(setCaptcha(response.data.url))\r\n        }\r\n    } catch (e) {\r\n        console.warn(e)\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    let response = await authAPI.sendLogoutRequest()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(false, null, null, null, null))\r\n    }\r\n}\r\n\r\nexport default authReducer","import Header from \"./Header\";\r\nimport {logout} from \"../../redux/reducers/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserID, getAuthUserLogin, getAuthUserPhoto, getIsAuth} from \"../../redux/selectors/auth-selectors\";\r\n\r\nfunction HeaderContainer(props) {\r\n    const handleLogout = () => {\r\n        props.logout()\r\n    }\r\n\r\n    return (\r\n        <Header {...props} handleLogout={handleLogout}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userLogin: getAuthUserLogin(state),\r\n    userID: getAuthUserID(state),\r\n    userPhoto: getAuthUserPhoto(state),\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","function Weather(props) {\r\n    return <>\r\n        <div className=\"location mt-3\">\r\n            <h1 className=\"fw-bold\">{props.weatherCity}, {props.country}</h1>\r\n        </div>\r\n        <div className=\"temperature\">\r\n            <div className=\"d-flex align-items-center\">\r\n                <div className=\"icon\">\r\n                    {props.weather.map((w, i) => w.icon &&\r\n                        <img key={i} src={`http://openweathermap.org/img/wn/${w.icon}.png`} alt=\"\"/>)}\r\n                </div>\r\n                <h2 className=\"mt-2 mb-4\">Температура {Math.round(props.temperature)}, °C</h2>\r\n            </div>\r\n            <p><span className=\"fw-bold\">Ощущается как:</span> {Math.round(props.temperatureFeels)} °C</p>\r\n            <p><span className=\"fw-bold\">Описание погоды:</span> {props.weather.map(w => w.description)}</p>\r\n            <p><span className=\"fw-bold\">Скорость ветра:</span> {Math.round(props.windSpeed)} м/с</p>\r\n            <p><span className=\"fw-bold\">Время рассвета:</span> {props.sunriseDate}</p>\r\n            <p><span className=\"fw-bold\">Время заката:</span> {props.sunsetDate}</p>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Weather","import {weatherAPI} from \"../../api/api\";\r\n\r\nconst SET_WEATHER_DATA = 'WEATHER/SET_WEATHER_DATA'\r\nconst TOGGLE_FETCHING = 'WEATHER/TOGGLE_FETCHING'\r\nconst SET_CITY = 'WEATHER/SET_CITY'\r\n\r\nlet initialState = {\r\n    weatherInfo: {\r\n        weather: [],\r\n        temperature: null,\r\n        temperatureFeels: null,\r\n        windSpeed: null,\r\n        sunriseDate: null,\r\n        sunsetDate: null,\r\n        country: null,\r\n        weatherCity: null,\r\n    },\r\n    isFetching: false,\r\n    cityName: '',\r\n    placeholder: 'Введите название города'\r\n}\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_WEATHER_DATA:\r\n            return {\r\n                ...state,\r\n                weatherInfo: {\r\n                    weather: [...action.weatherData.weather],\r\n                    temperature: action.weatherData.main.temp,\r\n                    temperatureFeels: action.weatherData.main.feels_like,\r\n                    windSpeed: action.weatherData.wind.speed,\r\n                    sunriseDate: action.weatherData.sys.sunrise,\r\n                    sunsetDate: action.weatherData.sys.sunset,\r\n                    country: action.weatherData.sys.country,\r\n                    weatherCity: action.weatherData.name\r\n                },\r\n            }\r\n        case\r\n        SET_CITY:\r\n            return {\r\n                ...state,\r\n                cityName: action.cityName\r\n            }\r\n        case\r\n        TOGGLE_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setWeatherData = (weatherData) => ({type: SET_WEATHER_DATA, weatherData})\r\nexport const setCity = (cityName) => ({type: SET_CITY, cityName})\r\nexport const toggleFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching})\r\n\r\nexport const getWeatherData = (cityName) => async dispatch => {\r\n    dispatch(toggleFetching(true))\r\n    dispatch(setCity(cityName))\r\n    if (cityName.trim()) {\r\n        try {\r\n            let response = await weatherAPI.getWeatherData(cityName)\r\n            dispatch(toggleFetching(false))\r\n            dispatch(setWeatherData(response.data))\r\n        } catch (e) {\r\n            console.warn(e)\r\n            alert('Город не найден')\r\n        }\r\n    } else {\r\n        alert('Введите название города')\r\n    }\r\n    dispatch(toggleFetching(false))\r\n}\r\n\r\nexport default weatherReducer","function WeatherForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleFormSubmit}>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder={props.placeholder}\r\n                        onChange={props.handleInputChange}\r\n                        value={props.cityName}\r\n                    />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Поиск</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default WeatherForm","import {connect} from \"react-redux\";\r\nimport Weather from \"./Weather\";\r\nimport {getWeatherData, setCity} from \"../../redux/reducers/weather-reducer\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport WeatherForm from \"./WeatherForm\";\r\nimport styles from './Weather.module.scss'\r\n\r\nfunction WeatherContainer(props) {\r\n    const handleInputChange = e => {\r\n        props.setCity(e.target.value)\r\n    }\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault()\r\n        props.getWeatherData(props.cityName)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.weatherWrapper}>\r\n            <WeatherForm\r\n                handleFormSubmit={handleFormSubmit}\r\n                handleInputChange={handleInputChange}\r\n                cityName={props.cityName}\r\n                placeholder={props.placeholder}\r\n            />\r\n            {props.fetchingStatus\r\n                ? <Preloader/>\r\n                : props.weatherCity && <Weather\r\n                weather={props.weather}\r\n                temperature={props.temperature}\r\n                temperatureFeels={props.temperatureFeels}\r\n                windSpeed={props.windSpeed}\r\n                sunriseDate={props.sunriseDate}\r\n                sunsetDate={props.sunsetDate}\r\n                country={props.country}\r\n                weatherCity={props.weatherCity}\r\n            />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    let sunrise = state.weatherPage.weatherInfo.sunriseDate\r\n    let sunset = state.weatherPage.weatherInfo.sunsetDate\r\n    let sunriseDate = new Date(1000 * sunrise)\r\n    let sunsetDate = new Date(1000 * sunset)\r\n\r\n    return {\r\n        fetchingStatus: state.weatherPage.isFetching,\r\n        cityName: state.weatherPage.cityName,\r\n        placeholder: state.weatherPage.placeholder,\r\n        weather: state.weatherPage.weatherInfo.weather,\r\n        temperature: state.weatherPage.weatherInfo.temperature,\r\n        temperatureFeels: state.weatherPage.weatherInfo.temperatureFeels,\r\n        windSpeed: state.weatherPage.weatherInfo.windSpeed,\r\n        sunriseDate: sunriseDate.getHours() + ':' + sunriseDate.getMinutes() + ':' + sunriseDate.getSeconds(),\r\n        sunsetDate: sunsetDate.getHours() + ':' + sunsetDate.getMinutes() + ':' + sunsetDate.getSeconds(),\r\n        country: state.weatherPage.weatherInfo.country,\r\n        weatherCity: state.weatherPage.weatherInfo.weatherCity,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getWeatherData, setCity})(WeatherContainer)","import {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/reducers/auth-reducer\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {requiredField} from \"../../redux/utilities/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getCaptchaURL, getIsAuth} from \"../../redux/selectors/auth-selectors\";\r\n\r\nfunction Login ({login, isAuth, captchaURL}) {\r\n    const handleLogin = values => {\r\n        login(values)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'profile/14088'}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"py-3 px-3\">\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={handleLogin} captchaURL={captchaURL}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction LoginForm ({handleSubmit, error, captchaURL}) {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"inputBlocks my-3\">\r\n                <div className=\"input-block\">\r\n                    <Field\r\n                        component={Input}\r\n                        validate={[requiredField]}\r\n                        name={'email'} type={'email'} placeholder=\"Email\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-block my-3\">\r\n                    <Field\r\n                        component={Input}\r\n                        validate={[requiredField]}\r\n                        name={'password'} type={'password'} placeholder=\"Password\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-block form-check\">\r\n                    <label className=\"form-check-label\">\r\n                        <Field\r\n                            className=\"form-check-input\"\r\n                            name={'rememberMe'}\r\n                            component={'input'} type={'checkbox'}\r\n                        />\r\n                        <p className=\"mb-0\">Запомнить меня</p>\r\n                    </label>\r\n                </div>\r\n                {error &&\r\n                    <div className=\"alert alert-danger mt-3\" role=\"alert\">\r\n                        {error}\r\n                    </div>\r\n                }\r\n                {captchaURL &&\r\n                <div className=\"input-block\">\r\n                    <div className=\"my-3\"><img src={captchaURL} alt=\"\"/></div>\r\n                    <Field name={'captcha'} component={'input'} type={'text'}/>\r\n                </div>\r\n                }\r\n            </div>\r\n            <button className=\"btn btn-primary px-5\">Войти</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'loginForm'})(LoginForm)\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuth: getIsAuth(state),\r\n    captchaURL: getCaptchaURL(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'APP/SET_INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst setInitializingSuccess = () => ({type: SET_INITIALIZED})\r\n\r\nexport const initializeApp = () => dispatch => {\r\n    dispatch(getAuthUserData()).then(() => {\r\n            dispatch(setInitializingSuccess())\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport default appReducer","export const getAppInit = state => {\r\n    return state.app.initialized\r\n}","let initialState = {\r\n    friends: [\r\n        {name: 'Dimych'},\r\n        {name: 'Jeremy'},\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport profileReducer from \"./reducers/profile-reducer\";\r\nimport dialogsReducer from \"./reducers/dialogs-reducer\";\r\nimport sidebarReducer from \"./reducers/sidebar-reducer\";\r\nimport todoListReducer from \"./reducers/todoList-reducer\";\r\nimport usersReducer from \"./reducers/users-reducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\nimport weatherReducer from \"./reducers/weather-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./reducers/app-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    todoList: todoListReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    weatherPage: weatherReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store","import React, { useEffect, Suspense } from 'react';\nimport { HashRouter, Route, withRouter } from \"react-router-dom\";\nimport Settings from \"./components/Settings/Settings\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ToDoListContainer from \"./components/ToDoList/ToDoListContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport WeatherContainer from \"./components/Weather/WeatherContainer\";\nimport Login from \"./components/Login/Login\";\nimport { connect, Provider } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/reducers/app-reducer\";\nimport Preloader from \"./components/common/preloader/Preloader\";\nimport { getAppInit } from \"./redux/selectors/app-selectors\";\nimport store from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\nfunction App({ initialized, initializeApp }) {\n    let init = initializeApp\n\n    useEffect(() => {\n        init()\n    }, [init, initialized])\n\n    if (!initialized) {\n        return <Preloader/>\n    }\n    return (\n        <main className=\"pageWrapper\">\n            <div className=\"container\">\n                <div className=\"appWrapper\">\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className=\"appContent\">\n                        <Suspense fallback={<Preloader/>}>\n                            <Route path=\"/login\" render={() => <Login/>}/>\n                            <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n                            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                            <Route path=\"/news\" render={() => <News/>}/>\n                            <Route path=\"/music\" render={() => <Music/>}/>\n                            <Route path=\"/settings\" render={() => <Settings/>}/>\n                            <Route path=\"/todolist\" render={() => <ToDoListContainer/>}/>\n                            <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                            <Route path=\"/weather\" render={() => <WeatherContainer/>}/>\n                        </Suspense>\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nconst mapStateToProps = state => ({\n    initialized: getAppInit(state)\n})\n\nconst AppContainer = compose(\n    connect(mapStateToProps, { initializeApp }),\n    withRouter\n)(App)\n\nexport default function SocialApp() {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    )\n}","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport SocialApp from \"./App\";\n\nReactDOM.render(\n    <SocialApp />, document.getElementById('root')\n)\n\n/*rerenderEntireTree()*/\n\n/*store.subscribe(() => {\n    rerenderEntireTree()\n})*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","export const getAuthUserLogin = state => {\r\n    return state.auth.login\r\n}\r\n\r\nexport const getAuthUserID = state => {\r\n    return state.auth.userID\r\n}\r\n\r\nexport const getAuthUserPhoto = state => {\r\n    return state.auth.userPhoto\r\n}\r\n\r\nexport const getIsAuth = state => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getCaptchaURL = state => {\r\n    return state.auth.captcha.imageUrl\r\n}","export const requiredField = value => {\r\n    return value ? undefined : 'Это поле обьязательно для заполнения'\r\n}\r\n\r\nexport const maxLength = length => value => {\r\n    return (value.length > length) ? `Макс. длинна сотсавляет ${length} символов` : undefined\r\n}\r\n\r\nexport const minLength = length => value => {\r\n    return (value.length < length) ? `Мин. длинна сотсавляет ${length} символов` : undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__u365D\",\"logoBlock\":\"Header_logoBlock__1AS_9\",\"loginBlock\":\"Header_loginBlock__3o0GL\",\"userInfo\":\"Header_userInfo__1xpF8\",\"avatar\":\"Header_avatar__11DMT\"};","import styles from './FormControls.module.scss';\r\nimport {Field} from \"redux-form\";\r\n\r\nfunction FormControl({meta: {touched, error}, children}) {\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div>\r\n            {children}\r\n            {hasError &&\r\n            <span className={styles.errorLabel}>{error}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({input, ...props}) => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea\r\n                {...input} {...props}\r\n                className={`form-control ${(!props.meta.valid && props.meta.touched) && 'is-invalid'}`}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, ...props}) => {\r\n    return (\r\n        <FormControl {...props}>\r\n            <input\r\n                {...input} {...props}\r\n                className={`form-control ${(!props.meta.valid && props.meta.touched) && 'is-invalid'}`}\r\n            />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props) => (\r\n    <Field\r\n        name={name}\r\n        validate={validators}\r\n        component={component}\r\n        {...props}\r\n    />\r\n)","export default __webpack_public_path__ + \"static/media/preloader.f2b68f11.svg\";","import preloader from \"../../../images/preloader.svg\";\r\n\r\nfunction Preloader(props) {\r\n    return <div className=\"preloader\">\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader\r\n\r\n","export default __webpack_public_path__ + \"static/media/user.4a000e6c.svg\";","import { profileAPI } from \"../../api/api\";\r\nimport { reset } from \"redux-form\";\r\n\r\nconst ADD_POST = 'PROFILE/ADD_POST'\r\nconst DELETE_POST = 'PROFILE/DELETE_POST'\r\nconst LIKE_POST = 'PROFILE/LIKE_POST'\r\nconst SET_USER_PROFILE = 'PROFILE/SET_USER_PROFILE'\r\nconst SET_USER_STATUS = 'PROFILE/SET_USER_STATUS'\r\nconst SET_CHANGE_STATUS_RESULT_CODE = 'PROFILE/SET_CHANGE_STATUS_RESULT_CODE'\r\n\r\nlet initialState = {\r\n    posts: [],\r\n    profile: null,\r\n    status: null,\r\n    statusChangeResult: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {\r\n                    id: state.posts.length,\r\n                    message: action.text,\r\n                    likesCount: null\r\n                }]\r\n            }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.id)\r\n            }\r\n        }\r\n        case LIKE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post => action.id === post.id\r\n                    ? {\r\n                        ...post,\r\n                        likesCount: ++post.likesCount\r\n                    } : post)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_CHANGE_STATUS_RESULT_CODE:\r\n            return {\r\n                ...state,\r\n                statusChangeResult: action.resultCode\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNewPost = text => ({\r\n    type: ADD_POST,\r\n    text\r\n})\r\n\r\nexport const deletePost = id => ({\r\n    type: DELETE_POST,\r\n    id\r\n})\r\n\r\nexport const addPost = text => dispatch => {\r\n    dispatch(setNewPost(text))\r\n    dispatch(reset('postForm'))\r\n}\r\n\r\nexport const likePost = (id) => ({\r\n    type: LIKE_POST,\r\n    id\r\n})\r\n\r\nconst setUserProfile = profile => ({\r\n    type: SET_USER_PROFILE,\r\n    profile: profile\r\n})\r\n\r\nexport const getUserProfile = userId => async dispatch => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nconst setUserStatus = status => ({\r\n    type: SET_USER_STATUS,\r\n    status\r\n})\r\n\r\nexport const getUserStatus = userId => async dispatch => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setUserStatus(response.data))\r\n}\r\n\r\nconst setChangeStatusResponse = resultCode => ({\r\n    type: SET_CHANGE_STATUS_RESULT_CODE,\r\n    resultCode,\r\n})\r\n\r\nexport const updateUserStatus = status => async dispatch => {\r\n    try {\r\n        let response = await profileAPI.setStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status))\r\n            dispatch(setChangeStatusResponse(true))\r\n        }\r\n    } catch (e) {\r\n        console.warn(e)\r\n        dispatch(setChangeStatusResponse(false))\r\n    } finally {\r\n        setTimeout(function () {\r\n            dispatch(setChangeStatusResponse(null))\r\n        }, 3000)\r\n    }\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}